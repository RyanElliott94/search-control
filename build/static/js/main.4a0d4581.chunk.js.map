{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","searchResults","setSearchResults","dummyArray","className","htmlFor","type","onChange","e","target","value","length","filter","val","includes","placeholder","id","map","item","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAuCeA,MApCf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACNC,EADM,KACSC,EADT,KAGPC,EAAa,CACjB,qBACA,0CACA,wBAWF,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACA,sBAAKA,UAAU,aAAf,UACC,uBAAOC,QAAQ,aAAf,oBACA,uBAAOC,KAAK,OAAOC,SAbA,SAAAC,GACnBA,EAAEC,OAAOC,MAAMC,OAAS,EACzBT,EAAiBC,EAAWS,QAAO,SAAAC,GAAG,OAAIA,EAAIC,SAASN,EAAEC,OAAOC,WAEhER,EAAiB,KAS8Ba,YAAY,qBAAqBC,GAAG,kBAEpF,qBAAKZ,UAAU,iBAAf,SACE,6BACGH,EAAcgB,KAAI,SAACC,EAAMC,GACxB,OAAO,6BAAeD,GAANC,gBClBZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4a0d4581.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const dummyArray = [\n    \"Random search term\",\n    \"Hi, My name is Ryan, search for me here\",\n    \"Search for gardeners\"\n  ];\n\n  const handleSearchBar = e => {\n    if(e.target.value.length > 3) {\n      setSearchResults(dummyArray.filter(val => val.includes(e.target.value)));\n    }else{\n      setSearchResults([]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-inside\">\n      <div className=\"form-group\">\n       <label htmlFor=\"search-bar\">Search</label>\n       <input type=\"text\" onChange={handleSearchBar} placeholder=\"Type something....\" id=\"search-bar\"></input>\n     </div>\n     <div className=\"search-results\">\n       <ul>\n         {searchResults.map((item, key) => {\n           return <li key={key}>{item}</li>\n         })}\n       </ul>\n     </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}